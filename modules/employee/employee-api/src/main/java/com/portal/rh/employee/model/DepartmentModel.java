/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.portal.rh.employee.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Department service. Represents a row in the &quot;RH_Department&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.portal.rh.employee.model.impl.DepartmentModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.portal.rh.employee.model.impl.DepartmentImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Department
 * @generated
 */
@ProviderType
public interface DepartmentModel
	extends BaseModel<Department>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a department model instance should use the {@link Department} interface instead.
	 */

	/**
	 * Returns the primary key of this department.
	 *
	 * @return the primary key of this department
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this department.
	 *
	 * @param primaryKey the primary key of this department
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the department ID of this department.
	 *
	 * @return the department ID of this department
	 */
	public long getDepartmentId();

	/**
	 * Sets the department ID of this department.
	 *
	 * @param departmentId the department ID of this department
	 */
	public void setDepartmentId(long departmentId);

	/**
	 * Returns the name of this department.
	 *
	 * @return the name of this department
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this department.
	 *
	 * @param name the name of this department
	 */
	public void setName(String name);

	/**
	 * Returns the email of this department.
	 *
	 * @return the email of this department
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this department.
	 *
	 * @param email the email of this department
	 */
	public void setEmail(String email);

	/**
	 * Returns the phone of this department.
	 *
	 * @return the phone of this department
	 */
	@AutoEscape
	public String getPhone();

	/**
	 * Sets the phone of this department.
	 *
	 * @param phone the phone of this department
	 */
	public void setPhone(String phone);

	/**
	 * Returns the active of this department.
	 *
	 * @return the active of this department
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this department is active.
	 *
	 * @return <code>true</code> if this department is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this department is active.
	 *
	 * @param active the active of this department
	 */
	public void setActive(boolean active);

	/**
	 * Returns the group ID of this department.
	 *
	 * @return the group ID of this department
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this department.
	 *
	 * @param groupId the group ID of this department
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this department.
	 *
	 * @return the company ID of this department
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this department.
	 *
	 * @param companyId the company ID of this department
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this department.
	 *
	 * @return the user ID of this department
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this department.
	 *
	 * @param userId the user ID of this department
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this department.
	 *
	 * @return the user uuid of this department
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this department.
	 *
	 * @param userUuid the user uuid of this department
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this department.
	 *
	 * @return the user name of this department
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this department.
	 *
	 * @param userName the user name of this department
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this department.
	 *
	 * @return the create date of this department
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this department.
	 *
	 * @param createDate the create date of this department
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this department.
	 *
	 * @return the modified date of this department
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this department.
	 *
	 * @param modifiedDate the modified date of this department
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	@Override
	public Department cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}